name: Release

on:
  push:
    branches:
      - "main"

jobs:
  install-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: "22"
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint
      - run: pnpm run test

  release:
    if: "!startsWith(github.event.head_commit.message, '[skip ci]')"
    needs: install-and-test
    runs-on: ubuntu-latest
    name: "Create a new release & update changelog using semantic-release"
    steps:
      - uses: actions/checkout@v4
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: "22"
      - run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - name: semantic-release
        run: npx semantic-release
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic-release.outputs.new-release-version }}

  publish-to-github-registry:
    needs: release
    if: "contains(${{ needs.release.outputs.new-release-published }}, 'true')"
    runs-on: ubuntu-latest
    name: "Releases package to Github Packages registry"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: "22"
      - run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - run: pnpm version ${{ needs.release.outputs.new-release-version }} --no-git-tag-version --no-commit-hooks
      - run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  publish-to-npm:
    needs: release
    if: "contains(${{ needs.release.outputs.new-release-published }}, 'true')"
    runs-on: ubuntu-latest
    name: "Releases package to NPM registry"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: "22"
      - run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - run: pnpm version ${{ needs.release.outputs.new-release-version }} --no-git-tag-version --no-commit-hooks
      - run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPMJS_READWRITE_TOKEN}}
